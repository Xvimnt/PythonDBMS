{"version":3,"sources":["ng://ngx-datepicker-material/lib/daterangepicker.component.ts","ng://ngx-datepicker-material/lib/daterangepicker.directive.ts","ng://ngx-datepicker-material/lib/daterangepicker.module.ts"],"names":["moment","_moment","left","right","DaterangepickerComponent","el","this","start","end","FormControl","disabled","startOf","endOf","direction","format","localeData","longDateFormat","separator","weekLabel","applyLabel","cancelLabel","customRangeLabel","daysOfWeek","weekdaysMin","monthNames","monthsShort","firstDay","firstDayOfWeek","choosedDate","EventEmitter","rangeClicked","datesUpdated","updateMonthsInView","prototype","ngOnInit","locale","iterator","push","shift","inline","_old","startDate","clone","endDate","renderCalendar","SideEnum","renderRanges","ranges","range","minDate","isBefore","maxDate","maxSpan","add","isAfter","timePicker","elem","document","createElement","innerHTML","rangeHtml","value","rangesArray","showCustomRangeLabel","showCalInRanges","length","alwaysShowCalendars","side","mainCalendar","leftCalendar","rightCalendar","month","year","hour","minute","second","daysInMonth","lastDay","lastMonth","subtract","lastYear","daysInLastMonth","dayOfWeek","day","calendar","i","startDay","curDate","col","row","singleDatePicker","calendarVariables","calRows","Array","from","keys","calCols","classes","showDropdowns","currentMonth","currentYear","maxYear","minYear","inMinYear","inMaxYear","years","y","dropdowns","monthArrays","yearArrays","dateLimit","maxLimit","rowClasses","emptyWeekRowClass","hasCurrentMonthDays","isSame","Date","isoWeekday","lastDayOfPreviousMonthClass","date","firstDayOfNextMonthClass","firstMonthDayClass","lastMonthDayClass","isInvalidDate","isCustom","isCustomDate","apply","cname","replace","classList","join","setStartDate","isShown","updateElement","showApplyOnlyForCustom","chosenRange","showApplyButton","emit","setEndDate","updateView","updateCalendars","linkedCalendars","calculateChosenLabel","autoUpdateInput","showRangeLabelOnInput","chosenLabel","remove","customRange","clickApply","e","hide","clickCancel","monthChanged","monthEvent","parseInt","target","monthOrYearChanged","yearChanged","yearEvent","isLeft","clickPrev","clickNext","clickDate","contains","autoApply","stopPropagation","clickRange","label","dates","keepCalendarOpeningWithRange","show","_this","setTimeout","handleInternalClick","updateLocale","key","hasOwnProperty","clear","disableRange","rangeMarkers","areBothBefore","every","areBothAfter","Component","args","selector","template","host","(click)","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ElementRef","Input","Output","ViewChild","DaterangepickerDirective","viewContainerRef","_changeDetectorRef","_componentFactoryResolver","_el","_renderer","differs","Function","componentFactory","resolveComponentFactory","componentRef","createComponent","picker","Object","defineProperty","_locale","_startKey","_endKey","_value","val","_onChange","markForCheck","asObservable","subscribe","change","onChange","nativeElement","localeDiffer","find","create","ngOnChanges","changes","notForChangesProperty","indexOf","currentValue","ngDoCheck","diff","onBlur","_onTouched","open","event","setPosition","toggle","writeValue","setValue","registerOnChange","fn","registerOnTouched","style","containerTop","container","pickerContainer","element","drops","offsetTop","clientHeight","opens","top","offsetLeft","clientWidth","setStyle","outsideClick","targetElement","Directive","(keyup.esc)","(blur)","(focus)","ViewContainerRef","ChangeDetectorRef","ComponentFactoryResolver","Renderer2","KeyValueDiffers","HostListener","NgxDaterangepickerMd","NgModule","declarations","imports","CommonModule","FormsModule","MatButtonModule","MatIconModule","ReactiveFormsModule","exports","entryComponents"],"mappings":"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","sourcesContent":["import {\r\n    Component, OnInit, ElementRef, ViewChild, EventEmitter, Output, Input, forwardRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { FormControl} from '@angular/forms';\r\n\r\nimport * as _moment from 'moment'; const moment = _moment;\r\n\r\nexport enum SideEnum {\r\n    left = 'left',\r\n    right = 'right'\r\n}\r\n\r\n@Component({\r\n    selector: 'ngx-daterangepicker-material',\r\n    styleUrls: ['./daterangepicker.component.scss'],\r\n    templateUrl: './daterangepicker.component.html',\r\n    host: {\r\n    '(click)': 'handleInternalClick($event)',\r\n    },\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => DaterangepickerComponent),\r\n        multi: true\r\n    }]\r\n})\r\nexport class DaterangepickerComponent implements OnInit {\r\n    private _old: {start: any, end: any} = {start: null, end: null};\r\n    chosenLabel: string;\r\n    calendarVariables: {left: any, right: any} = {left: {}, right: {}};\r\n    daterangepicker: {start: FormControl, end: FormControl} = {start: new FormControl(), end: new FormControl()};\r\n    applyBtn: {disabled: boolean} = {disabled: false};\r\n    startDate = moment().startOf('day');\r\n    endDate = moment().endOf('day');\r\n    dateLimit = null;\r\n\r\n    showApplyButton = false;\r\n    @Input()\r\n    showApplyOnlyForCustom: Boolean = false;\r\n    @Input()\r\n    minDate: _moment.Moment = null;\r\n    @Input()\r\n    maxDate: _moment.Moment = null;\r\n    @Input()\r\n    autoApply: Boolean = false;\r\n    @Input()\r\n    singleDatePicker: Boolean = false;\r\n    @Input()\r\n    showDropdowns: Boolean = false;\r\n    @Input()\r\n    showWeekNumbers: Boolean = false;\r\n    @Input()\r\n    showISOWeekNumbers : Boolean= false;\r\n    @Input()\r\n    linkedCalendars: Boolean = false;\r\n    @Input()\r\n    autoUpdateInput: Boolean = true;\r\n    @Input()\r\n    alwaysShowCalendars: Boolean = false;\r\n    @Input()\r\n    maxSpan: Boolean = false;\r\n    @Input()\r\n    timePicker: Boolean = false;\r\n    @Input()\r\n    showClearButton: Boolean = false;\r\n    @Input()\r\n    firstMonthDayClass: string = null;\r\n    @Input()\r\n    lastMonthDayClass: string = null;\r\n    @Input()\r\n    emptyWeekRowClass: string = null;\r\n    @Input()\r\n    firstDayOfNextMonthClass: string = null;\r\n    @Input()\r\n    lastDayOfPreviousMonthClass: string = null;\r\n    @Input()\r\n    locale: any = {\r\n        direction: 'ltr',\r\n        format: moment.localeData().longDateFormat('L'),\r\n        separator: ' - ',\r\n        weekLabel: 'W',\r\n        applyLabel: 'Apply',\r\n        cancelLabel: 'Cancel',\r\n        customRangeLabel: 'Custom Range',\r\n        daysOfWeek: moment.weekdaysMin(),\r\n        monthNames: moment.monthsShort(),\r\n        firstDay: moment.localeData().firstDayOfWeek()\r\n    };\r\n    // custom ranges\r\n    @Input()\r\n    ranges: any = {};\r\n    @Input()\r\n    showCustomRangeLabel: boolean;\r\n    @Input()\r\n    keepCalendarOpeningWithRange: boolean = false;\r\n    @Input()\r\n    showRangeLabelOnInput: boolean = false;\r\n    @Input()\r\n    material: boolean = false;\r\n    @Input()\r\n    showCancel: boolean = false;\r\n    chosenRange: string;\r\n    rangesArray: Array<any> = [];\r\n\r\n    // some state information\r\n    isShown: Boolean = false;\r\n    inline: boolean = true;\r\n    leftCalendar: any = {};\r\n    rightCalendar: any = {};\r\n    showCalInRanges: Boolean = false;\r\n\r\n    options: any = {} ; // should get some opt from user\r\n    @Output('choosedDate') choosedDate: EventEmitter<Object>;\r\n    @Output('rangeClicked') rangeClicked: EventEmitter<Object>;\r\n    @Output('datesUpdated') datesUpdated: EventEmitter<Object>;\r\n    @ViewChild('pickerContainer') pickerContainer: ElementRef;\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n    ) {\r\n        this.choosedDate = new EventEmitter();\r\n        this.rangeClicked = new EventEmitter();\r\n        this.datesUpdated = new EventEmitter();\r\n        this.updateMonthsInView();\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.locale.firstDay != 0) {\r\n            var iterator = this.locale.firstDay;\r\n            while (iterator > 0) {\r\n                this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift());\r\n                iterator--;\r\n            }\r\n        }\r\n        if(this.inline) {\r\n            this._old.start = this.startDate.clone();\r\n            this._old.end = this.endDate.clone();\r\n        }\r\n        this.renderCalendar(SideEnum.left);\r\n        this.renderCalendar(SideEnum.right);\r\n        this.renderRanges();\r\n    }\r\n    renderRanges() {\r\n        let start, end;\r\n        if (typeof this.ranges === 'object') {\r\n            for (const range in this.ranges) {\r\n                if (typeof this.ranges[range][0] === 'string') {\r\n                    start = moment(this.ranges[range][0], this.locale.format);\r\n                } else {\r\n                    start = moment(this.ranges[range][0]);\r\n                }\r\n\r\n                if (typeof this.ranges[range][1] === 'string') {\r\n                    end = moment(this.ranges[range][1], this.locale.format);\r\n                } else {\r\n                    end = moment(this.ranges[range][1]);\r\n                }\r\n\r\n                // If the start or end date exceed those allowed by the minDate or maxSpan\r\n                // options, shorten the range to the allowable period.\r\n                if (this.minDate && start.isBefore(this.minDate)) {\r\n                    start = this.minDate.clone();\r\n                }\r\n\r\n                var maxDate = this.maxDate;\r\n                if (this.maxSpan && maxDate && start.clone().add(this.maxSpan).isAfter(maxDate)) {\r\n                    maxDate = start.clone().add(this.maxSpan);\r\n                }\r\n                if (maxDate && end.isAfter(maxDate)) {\r\n                    end = maxDate.clone();\r\n                }\r\n\r\n                // If the end of the range is before the minimum or the start of the range is\r\n                // after the maximum, don't display this range option at all.\r\n                if ((this.minDate && end.isBefore(this.minDate, this.timePicker ? 'minute' : 'day'))\r\n                || (maxDate && start.isAfter(maxDate, this.timePicker ? 'minute' : 'day'))) {\r\n                    continue;\r\n                }\r\n\r\n                //Support unicode chars in the range names.\r\n                var elem = document.createElement('textarea');\r\n                elem.innerHTML = range;\r\n                var rangeHtml = elem.value;\r\n\r\n                this.ranges[rangeHtml] = [start, end];\r\n            }\r\n            for (const range in this.ranges) {\r\n                this.rangesArray.push(range);\r\n            }\r\n            if (this.showCustomRangeLabel) {\r\n                this.rangesArray.push(this.locale.customRangeLabel);\r\n            }\r\n            this.showCalInRanges = (!this.rangesArray.length) || this.alwaysShowCalendars;\r\n        }\r\n\r\n    }\r\n    renderCalendar(side: any) { // site enum\r\n        let mainCalendar: any = ( side === SideEnum.left ) ? this.leftCalendar : this.rightCalendar;\r\n        const month = mainCalendar.month.month();\r\n        const year = mainCalendar.month.year();\r\n        const hour = mainCalendar.month.hour();\r\n        const minute = mainCalendar.month.minute();\r\n        const second = mainCalendar.month.second();\r\n        const daysInMonth = moment([year, month]).daysInMonth();\r\n        const firstDay = moment([year, month, 1]);\r\n        const lastDay = moment([year, month, daysInMonth]);\r\n        const lastMonth = moment(firstDay).subtract(1, 'month').month();\r\n        const lastYear = moment(firstDay).subtract(1, 'month').year();\r\n        const daysInLastMonth = moment([lastYear, lastMonth]).daysInMonth();\r\n        const dayOfWeek = firstDay.day();\r\n        // initialize a 6 rows x 7 columns array for the calendar\r\n        let calendar: any= [];\r\n        calendar.firstDay = firstDay;\r\n        calendar.lastDay = lastDay;\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            calendar[i] = [];\r\n        }\r\n\r\n        // populate the calendar with date objects\r\n        let startDay = daysInLastMonth - dayOfWeek + this.locale.firstDay + 1;\r\n        if (startDay > daysInLastMonth) {\r\n            startDay -= 7;\r\n        }\r\n        if (dayOfWeek === this.locale.firstDay) {\r\n            startDay = daysInLastMonth - 6;\r\n        }\r\n\r\n        let curDate = moment([lastYear, lastMonth, startDay, 12, minute, second]);\r\n\r\n        for (let i = 0, col = 0, row = 0; i < 42; i++, col++, curDate = moment(curDate).add(24, 'hour')) {\r\n            if (i > 0 && col % 7 === 0) {\r\n                col = 0;\r\n                row++;\r\n            }\r\n            calendar[row][col] = curDate.clone().hour(hour).minute(minute).second(second);\r\n            curDate.hour(12);\r\n\r\n            if (this.minDate && calendar[row][col].format('YYYY-MM-DD') === this.minDate.format('YYYY-MM-DD') &&\r\n            calendar[row][col].isBefore(this.minDate) && side === 'left') {\r\n                calendar[row][col] = this.minDate.clone();\r\n            }\r\n\r\n            if (this.maxDate && calendar[row][col].format('YYYY-MM-DD') === this.maxDate.format('YYYY-MM-DD') &&\r\n            calendar[row][col].isAfter(this.maxDate) && side === 'right') {\r\n                calendar[row][col] = this.maxDate.clone();\r\n            }\r\n            if (!this.singleDatePicker && this.maxDate && calendar[row][col].format('YYYY-MM-DD') === this.maxDate.format('YYYY-MM-DD') && side === 'left') {\r\n                // use previous calendars\r\n                this.leftCalendar.month.subtract(1, 'month');\r\n            }\r\n\r\n        }\r\n\r\n        // make the calendar object available to hoverDate/clickDate\r\n        if (side === SideEnum.left) {\r\n            this.leftCalendar.calendar = calendar;\r\n        } else {\r\n            this.rightCalendar.calendar = calendar;\r\n        }\r\n\r\n        //\r\n        // Display the calendar\r\n        //\r\n        const minDate = side === 'left' ? this.minDate : this.startDate;\r\n        let maxDate = this.maxDate;\r\n        const selected = side === 'left' ? this.startDate : this.endDate;\r\n        this.calendarVariables[side] = {\r\n            month: month,\r\n            year: year,\r\n            hour: hour,\r\n            minute: minute,\r\n            second: second,\r\n            daysInMonth: daysInMonth,\r\n            firstDay: firstDay,\r\n            lastDay: lastDay,\r\n            lastMonth: lastMonth,\r\n            lastYear: lastYear,\r\n            daysInLastMonth: daysInLastMonth,\r\n            dayOfWeek: dayOfWeek,\r\n            // other vars\r\n            calRows: Array.from(Array(6).keys()),\r\n            calCols: Array.from(Array(7).keys()),\r\n            classes: {},\r\n            minDate: minDate,\r\n            maxDate: maxDate,\r\n            calendar: calendar\r\n        };\r\n\r\n        if (this.showDropdowns) {\r\n            const currentMonth = calendar[1][1].month();\r\n            const currentYear = calendar[1][1].year();\r\n            const maxYear = (maxDate && maxDate.year()) || (currentYear + 5);\r\n            const minYear = (minDate && minDate.year()) || (currentYear - 50);\r\n            const inMinYear = currentYear === minYear;\r\n            const inMaxYear = currentYear === maxYear;\r\n            const years = [];\r\n            for (var y = minYear; y <= maxYear; y++) {\r\n                years.push(y);\r\n            }\r\n            this.calendarVariables[side].dropdowns = {\r\n                currentMonth: currentMonth,\r\n                currentYear: currentYear,\r\n                maxYear: maxYear,\r\n                minYear: minYear,\r\n                inMinYear: inMinYear,\r\n                inMaxYear: inMaxYear,\r\n                monthArrays: Array.from(Array(12).keys()),\r\n                yearArrays: years\r\n            };\r\n        }\r\n\r\n        // adjust maxDate to reflect the dateLimit setting in order to\r\n        // grey out end dates beyond the dateLimit\r\n        if (this.endDate === null && this.dateLimit) {\r\n            const maxLimit = this.startDate.clone().add(this.dateLimit).endOf('day');\r\n            if (!maxDate || maxLimit.isBefore(maxDate)) {\r\n                maxDate = maxLimit;\r\n            }\r\n        }\r\n\r\n        for (let row = 0; row < 6; row++) {\r\n            this.calendarVariables[side].classes[row] = {};\r\n            const rowClasses = [];\r\n            if(this.emptyWeekRowClass && !this.hasCurrentMonthDays(month, calendar[row])) {\r\n                rowClasses.push(this.emptyWeekRowClass);\r\n            }\r\n            for (let col = 0; col < 7; col++) {\r\n                const classes = [];\r\n\r\n                // highlight today's date\r\n                if (calendar[row][col].isSame(new Date(), 'day')) {\r\n                    classes.push('today');\r\n                }\r\n\r\n                // highlight weekends\r\n                if (calendar[row][col].isoWeekday() > 5) {\r\n                    classes.push('weekend');\r\n                }\r\n\r\n                // grey out the dates in other months displayed at beginning and end of this calendar\r\n                if (calendar[row][col].month() !== calendar[1][1].month()) {\r\n                    classes.push('off');\r\n\r\n                    // mark the last day of the previous month in this calendar\r\n                    if(this.lastDayOfPreviousMonthClass && (calendar[row][col].month() < calendar[1][1].month() || calendar[1][1].month() === 0) && calendar[row][col].date() === daysInLastMonth) {\r\n                        classes.push(this.lastDayOfPreviousMonthClass);\r\n                    }\r\n\r\n                    // mark the first day of the next month in this calendar\r\n                    if(this.firstDayOfNextMonthClass && (calendar[row][col].month() > calendar[1][1].month() || calendar[row][col].month() === 0) && calendar[row][col].date() === 1) {\r\n                        classes.push(this.firstDayOfNextMonthClass);\r\n                    }\r\n                }\r\n\r\n                // mark the first day of the current month with a custom class\r\n                if (this.firstMonthDayClass && calendar[row][col].month() === calendar[1][1].month() && calendar[row][col].date() === calendar.firstDay.date()) {\r\n                    classes.push(this.firstMonthDayClass);\r\n                }\r\n\r\n                // mark the last day of the current month with a custom class\r\n                if (this.lastMonthDayClass && calendar[row][col].month() === calendar[1][1].month() && calendar[row][col].date() === calendar.lastDay.date()) {\r\n                    classes.push(this.lastMonthDayClass);\r\n                }\r\n\r\n                // don't allow selection of dates before the minimum date\r\n                if (this.minDate && calendar[row][col].isBefore(this.minDate, 'day')) {\r\n                    classes.push('off', 'disabled');\r\n                }\r\n\r\n                // don't allow selection of dates after the maximum date\r\n                if (maxDate && calendar[row][col].isAfter(maxDate, 'day')) {\r\n                    classes.push('off', 'disabled');\r\n                }\r\n\r\n                // don't allow selection of date if a custom function decides it's invalid\r\n                if (this.isInvalidDate(calendar[row][col])) {\r\n                    classes.push('off', 'disabled');\r\n                }\r\n\r\n                // highlight the currently selected start date\r\n                if (this.startDate && calendar[row][col].format('YYYY-MM-DD') === this.startDate.format('YYYY-MM-DD')) {\r\n                    classes.push('active', 'start-date');\r\n                }\r\n\r\n                // highlight the currently selected end date\r\n                if (this.endDate != null && calendar[row][col].format('YYYY-MM-DD') === this.endDate.format('YYYY-MM-DD')) {\r\n                    classes.push('active', 'end-date');\r\n                }\r\n\r\n                // highlight dates in-between the selected dates\r\n                if (this.endDate != null && calendar[row][col] > this.startDate && calendar[row][col] < this.endDate) {\r\n                    classes.push('in-range');\r\n                }\r\n\r\n                // apply custom classes for this date\r\n                const isCustom = this.isCustomDate(calendar[row][col]);\r\n                if (isCustom !== false) {\r\n                    if (typeof isCustom === 'string') {\r\n                        classes.push(isCustom);\r\n                    } else {\r\n                        Array.prototype.push.apply(classes, isCustom);\r\n                    }\r\n                }\r\n                // store classes var\r\n                let cname = '', disabled = false;\r\n                for (let i = 0; i < classes.length; i++) {\r\n                    cname += classes[i] + ' ';\r\n                    if (classes[i] === 'disabled') {\r\n                        disabled = true;\r\n                    }\r\n                }\r\n                if (!disabled) {\r\n                    cname += 'available';\r\n                }\r\n\r\n                this.calendarVariables[side].classes[row][col] = cname.replace(/^\\s+|\\s+$/g, '');\r\n            }\r\n\r\n            this.calendarVariables[side].classes[row].classList = rowClasses.join(' ');\r\n        }\r\n    }\r\n    setStartDate(startDate) {\r\n        if (typeof startDate === 'string') {\r\n            this.startDate = moment(startDate, this.locale.format);\r\n        }\r\n\r\n        if (typeof startDate === 'object') {\r\n            this.startDate = moment(startDate);\r\n        }\r\n\r\n        this.startDate = this.startDate.startOf('day');\r\n\r\n\r\n        if (this.minDate && this.startDate.isBefore(this.minDate)) {\r\n            this.startDate = this.minDate.clone();\r\n        }\r\n\r\n        if (this.maxDate && this.startDate.isAfter(this.maxDate)) {\r\n            this.startDate = this.maxDate.clone();\r\n        }\r\n\r\n        if (!this.isShown) {\r\n            this.updateElement();\r\n        }\r\n\r\n        if(this.showApplyOnlyForCustom && this.chosenRange == this.locale.customRangeLabel){\r\n            this.showApplyButton = false;\r\n        }\r\n\r\n        this.updateMonthsInView();\r\n        this.datesUpdated.emit({startDate: this.startDate, endDate: this.endDate});\r\n\r\n    }\r\n\r\n    setEndDate(endDate) {\r\n        if (typeof endDate === 'string') {\r\n            this.endDate = moment(endDate, this.locale.format);\r\n        }\r\n\r\n        if (typeof endDate === 'object') {\r\n            this.endDate = moment(endDate);\r\n        }\r\n\r\n        this.endDate = this.endDate.add(1, 'd').startOf('day').subtract(1, 'second');\r\n\r\n\r\n        if (this.endDate.isBefore(this.startDate)) {\r\n            this.endDate = this.startDate.clone();\r\n        }\r\n\r\n        if (this.maxDate && this.endDate.isAfter(this.maxDate)) {\r\n            this.endDate = this.maxDate.clone();\r\n        }\r\n\r\n        if (this.dateLimit && this.startDate.clone().add(this.dateLimit).isBefore(this.endDate)) {\r\n            this.endDate = this.startDate.clone().add(this.dateLimit);\r\n        }\r\n\r\n\r\n        if (!this.isShown) {\r\n            // this.updateElement();\r\n        }\r\n        this.updateMonthsInView();\r\n        this.datesUpdated.emit({startDate: this.startDate, endDate: this.endDate});\r\n    }\r\n    @Input()\r\n    isInvalidDate(date) {\r\n        return false;\r\n    }\r\n\r\n    isCustomDate(date) {\r\n        return false;\r\n    }\r\n\r\n    updateView() {\r\n        this.updateMonthsInView();\r\n        this.updateCalendars();\r\n    }\r\n\r\n    updateMonthsInView() {\r\n        if (this.endDate) {\r\n            // if both dates are visible already, do nothing\r\n            if (!this.singleDatePicker && this.leftCalendar.month && this.rightCalendar.month &&\r\n                ((this.startDate && this.leftCalendar && this.startDate.format('YYYY-MM') === this.leftCalendar.month.format('YYYY-MM')) ||\r\n                (this.startDate && this.rightCalendar && this.startDate.format('YYYY-MM') === this.rightCalendar.month.format('YYYY-MM')))\r\n                &&\r\n                (this.endDate.format('YYYY-MM') === this.leftCalendar.month.format('YYYY-MM') ||\r\n                this.endDate.format('YYYY-MM') === this.rightCalendar.month.format('YYYY-MM'))\r\n                ) {\r\n                return;\r\n            }\r\n            if (this.startDate) {\r\n                this.leftCalendar.month = this.startDate.clone().date(2);\r\n                if (!this.linkedCalendars && (this.endDate.month() !== this.startDate.month() ||\r\n                    this.endDate.year() !== this.startDate.year())) {\r\n                    this.rightCalendar.month = this.endDate.clone().date(2);\r\n                } else {\r\n                        this.rightCalendar.month = this.startDate.clone().date(2).add(1, 'month');\r\n                }\r\n            }\r\n\r\n        } else {\r\n            if (this.leftCalendar.month.format('YYYY-MM') !== this.startDate.format('YYYY-MM') &&\r\n            this.rightCalendar.month.format('YYYY-MM') !== this.startDate.format('YYYY-MM')) {\r\n                this.leftCalendar.month = this.startDate.clone().date(2);\r\n                this.rightCalendar.month = this.startDate.clone().date(2).add(1, 'month');\r\n            }\r\n        }\r\n        if (this.maxDate && this.linkedCalendars && !this.singleDatePicker && this.rightCalendar.month > this.maxDate) {\r\n            this.rightCalendar.month = this.maxDate.clone().date(2);\r\n            this.leftCalendar.month = this.maxDate.clone().date(2).subtract(1, 'month');\r\n        }\r\n    }\r\n    /**\r\n     *  This is responsible for updating the calendars\r\n     */\r\n    updateCalendars() {\r\n        this.renderCalendar(SideEnum.left);\r\n        this.renderCalendar(SideEnum.right);\r\n\r\n        if (this.endDate === null) { return; }\r\n        this.calculateChosenLabel();\r\n    }\r\n    updateElement() {\r\n        if (!this.singleDatePicker && this.autoUpdateInput) {\r\n            if (this.startDate && this.endDate) {\r\n                // if we use ranges and should show range label on inpu\r\n                if (this.rangesArray.length && this.showRangeLabelOnInput === true && this.chosenRange &&\r\n                    this.locale.customRangeLabel !== this.chosenRange) {\r\n                    this.chosenLabel = this.chosenRange;\r\n                } else {\r\n                    this.chosenLabel = this.startDate.format(this.locale.format) +\r\n                    this.locale.separator + this.endDate.format(this.locale.format);\r\n                }\r\n            }\r\n        } else if ( this.autoUpdateInput) {\r\n            this.chosenLabel = this.startDate.format(this.locale.format);\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.isShown = false;\r\n    }\r\n    /**\r\n     * this should calculate the label\r\n     */\r\n    calculateChosenLabel () {\r\n        let customRange = true;\r\n        let i = 0;\r\n        if (this.rangesArray.length > 0) {\r\n            for (const range in this.ranges) {\r\n                if (this.startDate.format('YYYY-MM-DD') == this.ranges[range][0].format('YYYY-MM-DD') && this.endDate.format('YYYY-MM-DD') == this.ranges[range][1].format('YYYY-MM-DD')) {\r\n                    customRange = false;\r\n                    this.chosenRange = this.rangesArray[i];\r\n                    break;\r\n                }\r\n                i++;\r\n            }\r\n            if (customRange) {\r\n                if(this.showApplyOnlyForCustom) {\r\n                    this.showApplyButton = true;\r\n                }\r\n                if (this.showCustomRangeLabel) {\r\n                    this.chosenRange = this.locale.customRangeLabel;\r\n                } else {\r\n                    this.chosenRange = null;\r\n                }\r\n                // if custom label: show calenar\r\n                this.showCalInRanges = true;\r\n            } else {\r\n                this.showApplyButton = false;\r\n            }\r\n        }\r\n\r\n        this.updateElement();\r\n    }\r\n\r\n    clickApply(e?) {\r\n        if (!this.singleDatePicker && this.startDate && !this.endDate) {\r\n            this.endDate = this.startDate.clone();\r\n            this.calculateChosenLabel();\r\n        }\r\n        if (this.chosenLabel) {\r\n            this.choosedDate.emit({chosenLabel: this.chosenLabel, startDate: this.startDate, endDate: this.endDate});\r\n        }\r\n\r\n        this.datesUpdated.emit({startDate: this.startDate, endDate: this.endDate});\r\n        this.hide();\r\n    }\r\n\r\n    clickCancel(e) {\r\n        this.startDate = this._old.start;\r\n        this.endDate = this._old.end;\r\n        this.datesUpdated.emit({startDate: this.startDate, endDate: this.endDate});\r\n        if(this.inline) {\r\n            this.updateView();\r\n        }\r\n        this.hide();\r\n    }\r\n    /**\r\n     * called when month is changed\r\n     * @param monthEvent get value in event.target.value\r\n     * @param side left or right\r\n     */\r\n    monthChanged(monthEvent: any, side: string) {\r\n        const year = this.calendarVariables[side].dropdowns.currentYear;\r\n        const month = parseInt(monthEvent.target.value, 10);\r\n        this.monthOrYearChanged(month, year, side);\r\n    }\r\n    /**\r\n     * called when year is changed\r\n     * @param yearEvent get value in event.target.value\r\n     * @param side left or right\r\n     */\r\n    yearChanged(yearEvent: any, side: string) {\r\n        const month = this.calendarVariables[side].dropdowns.currentMonth;\r\n        const year = parseInt(yearEvent.target.value, 10);\r\n        this.monthOrYearChanged(month, year, side);\r\n    }\r\n    /**\r\n     *  call when month or year changed\r\n     * @param month month number 0 -11\r\n     * @param year year eg: 1995\r\n     * @param side left or right\r\n     */\r\n    monthOrYearChanged(month: number, year: number, side: string) {\r\n        const isLeft = side === SideEnum.left;\r\n\r\n        if (!isLeft) {\r\n            if (year < this.startDate.year() || (year === this.startDate.year() && month < this.startDate.month())) {\r\n                month = this.startDate.month();\r\n                year = this.startDate.year();\r\n            }\r\n        }\r\n\r\n        if (this.minDate) {\r\n            if (year < this.minDate.year() || (year === this.minDate.year() && month < this.minDate.month())) {\r\n                month = this.minDate.month();\r\n                year = this.minDate.year();\r\n            }\r\n        }\r\n\r\n        if (this.maxDate) {\r\n            if (year > this.maxDate.year() || (year === this.maxDate.year() && month > this.maxDate.month())) {\r\n                month = this.maxDate.month();\r\n                year = this.maxDate.year();\r\n            }\r\n        }\r\n        this.calendarVariables[side].dropdowns.currentYear = year;\r\n        this.calendarVariables[side].dropdowns.currentMonth = month;\r\n        if (isLeft) {\r\n            this.leftCalendar.month.month(month).year(year);\r\n            if (this.linkedCalendars) {\r\n                this.rightCalendar.month = this.leftCalendar.month.clone().add(1, 'month');\r\n            }\r\n        } else {\r\n            this.rightCalendar.month.month(month).year(year);\r\n            if (this.linkedCalendars) {\r\n                this.leftCalendar.month = this.rightCalendar.month.clone().subtract(1, 'month');\r\n            }\r\n        }\r\n        this.updateCalendars();\r\n    }\r\n\r\n    /**\r\n     * Click on previous month\r\n     * @param side left or right calendar\r\n     */\r\n    clickPrev(side: string) {\r\n        if (side === SideEnum.left) {\r\n            this.leftCalendar.month.subtract(1, 'month');\r\n            if (this.linkedCalendars) {\r\n                this.rightCalendar.month.subtract(1, 'month');\r\n            }\r\n        } else {\r\n            this.rightCalendar.month.subtract(1, 'month');\r\n        }\r\n        this.updateCalendars();\r\n    }\r\n    /**\r\n     * Click on next month\r\n     * @param side left or right calendar\r\n     */\r\n    clickNext(side: string) {\r\n        if (side === SideEnum.left) {\r\n            this.leftCalendar.month.add(1, 'month');\r\n        } else {\r\n            this.rightCalendar.month.add(1, 'month');\r\n            if (this.linkedCalendars) {\r\n                this.leftCalendar.month.add(1, 'month');\r\n            }\r\n        }\r\n        this.updateCalendars();\r\n    }\r\n    /**\r\n     * When selecting a date\r\n     * @param e event: get value by e.target.value\r\n     * @param side left or right\r\n     * @param row row position of the current date clicked\r\n     * @param col col position of the current date clicked\r\n     */\r\n    clickDate(e, side: any, row: number, col: number) {\r\n        if (!e.target.classList.contains('available')) {\r\n            return;\r\n        }\r\n        if (this.rangesArray.length) {\r\n            this.chosenRange = this.locale.customRangeLabel;\r\n        }\r\n\r\n        let date = side ===  SideEnum.left ? this.leftCalendar.calendar[row][col] : this.rightCalendar.calendar[row][col];\r\n\r\n        if (this.endDate || date.isBefore(this.startDate, 'day')) { // picking start\r\n            this.endDate = null;\r\n            this.setStartDate(date.clone());\r\n        } else if (!this.endDate && date.isBefore(this.startDate)) {\r\n            // special case: clicking the same date for start/end,\r\n            // but the time of the end date is before the start date\r\n            this.setEndDate(this.startDate.clone());\r\n        } else { // picking end\r\n            this.setEndDate(date.clone());\r\n            if (this.autoApply) {\r\n                this.calculateChosenLabel();\r\n                this.clickApply();\r\n            }\r\n        }\r\n\r\n        if (this.singleDatePicker) {\r\n            this.setEndDate(this.startDate);\r\n            this.updateElement();\r\n            if (this.autoApply) {\r\n                this.clickApply();\r\n            }\r\n        }\r\n\r\n        this.updateView();\r\n\r\n        // This is to cancel the blur event handler if the mouse was in one of the inputs\r\n        e.stopPropagation();\r\n\r\n    }\r\n    /**\r\n     *  Click on the custom range\r\n     * @param e: Event\r\n     * @param label\r\n     */\r\n    clickRange(e, label) {\r\n        this.chosenRange = label;\r\n        if (label == this.locale.customRangeLabel) {\r\n            this.isShown  = true; // show calendars\r\n            this.showCalInRanges = true;\r\n        } else {\r\n            var dates = this.ranges[label];\r\n            this.startDate = dates[0].clone();\r\n            this.endDate = dates[1].clone();\r\n            if (this.showRangeLabelOnInput && label !== this.locale.customRangeLabel) {\r\n                this.chosenLabel = label;\r\n            } else {\r\n                this.calculateChosenLabel();\r\n            }\r\n            this.showCalInRanges = (!this.rangesArray.length) || this.alwaysShowCalendars;\r\n\r\n            if (!this.timePicker) {\r\n                this.startDate.startOf('day');\r\n                this.endDate.endOf('day');\r\n            }\r\n\r\n            if (!this.alwaysShowCalendars) {\r\n                this.isShown  = false; // hide calendars\r\n            }\r\n            this.rangeClicked.emit({label: label, dates: dates});\r\n            if (!this.keepCalendarOpeningWithRange) {\r\n                this.clickApply();\r\n            } else {\r\n                this.renderCalendar(SideEnum.left);\r\n                this.renderCalendar(SideEnum.right);\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n    show(e?) {\r\n        if (this.isShown) { return; }\r\n        this._old.start = this.startDate.clone();\r\n        this._old.end = this.endDate.clone();\r\n        this.isShown = true;\r\n        this.updateView();\r\n    }\r\n\r\n    hide(e?) {\r\n        if (!this.isShown) {\r\n            return;\r\n        }\r\n        // incomplete date selection, revert to last values\r\n        if (!this.endDate) {\r\n            if (this._old.start) {\r\n                this.startDate = this._old.start.clone();\r\n            }\r\n            if (this._old.end) {\r\n                this.endDate = this._old.end.clone();\r\n            }\r\n        }\r\n\r\n        // if a new date range was selected, invoke the user callback function\r\n        if (!this.startDate.isSame(this._old.start) || !this.endDate.isSame(this._old.end)) {\r\n           // this.callback(this.startDate, this.endDate, this.chosenLabel);\r\n        }\r\n\r\n        // if picker is attached to a text input, update it\r\n        this.updateElement();\r\n        setTimeout(() => {this.isShown = false}, 0)\r\n    }\r\n\r\n    /**\r\n     * handle click on all element in the component, usefull for outside of click\r\n     * @param e event\r\n     */\r\n    handleInternalClick(e) {\r\n        e.stopPropagation()\r\n    }\r\n    /**\r\n     * update the locale options\r\n     * @param locale\r\n     */\r\n    updateLocale(locale) {\r\n        for (const key in locale) {\r\n          if (this.locale.hasOwnProperty(key) && this.locale.hasOwnProperty(key)) {\r\n            this.locale[key] = locale[key];\r\n          }\r\n        }\r\n    }\r\n    /**\r\n     *  clear the daterange picker\r\n     */\r\n    clear() {\r\n        this.startDate = moment().startOf('day');\r\n        this.endDate = moment().endOf('day');\r\n        this.choosedDate.emit({chosenLabel: '', startDate: null, endDate: null});\r\n        this.datesUpdated.emit({startDate: null, endDate: null});\r\n        this.hide();\r\n    }\r\n\r\n    /**\r\n     * Find out if the selected range should be disabled if it doesn't\r\n     * fit into minDate and maxDate limitations.\r\n     */\r\n    disableRange(range) {\r\n      if (range === this.locale.customRangeLabel) {\r\n        return false;\r\n      }\r\n      const rangeMarkers = this.ranges[range];\r\n      const areBothBefore = rangeMarkers.every( date => {\r\n        if (!this.minDate) {\r\n            return false;\r\n        }\r\n        return date.isBefore(this.minDate)\r\n      });\r\n\r\n      const areBothAfter = rangeMarkers.every( date => {\r\n        if (!this.maxDate) {\r\n            return false;\r\n        }\r\n        return date.isAfter(this.maxDate)\r\n      });\r\n      return (areBothBefore || areBothAfter);\r\n    }\r\n\r\n    /**\r\n     * Find out if the current calendar row has current month days\r\n     * (as opposed to consisting of only previous/next month days)\r\n     */\r\n    hasCurrentMonthDays(currentMonth, row) {\r\n        for (let day = 0; day < 7; day++) {\r\n            if(row[day].month() === currentMonth) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import {\r\n  Directive,\r\n  ViewContainerRef,\r\n  ComponentFactoryResolver,\r\n  ElementRef,\r\n  HostListener,\r\n  forwardRef,\r\n  ChangeDetectorRef,\r\n  OnInit,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Input,\r\n  DoCheck,\r\n  KeyValueDiffer,\r\n  KeyValueDiffers,\r\n  Output,\r\n  EventEmitter,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { DaterangepickerComponent } from './daterangepicker.component';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport * as _moment from 'moment';\r\nconst moment = _moment;\r\n\r\n@Directive({\r\n  selector: 'input[ngxDaterangepickerMd]',\r\n  host: {\r\n    '(keyup.esc)': 'hide()',\r\n    '(blur)': 'onBlur()',\r\n    '(focus)': 'open()',\r\n    '(click)': 'open()'\r\n  },\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => DaterangepickerDirective), multi: true\r\n    }\r\n]\r\n})\r\nexport class DaterangepickerDirective implements OnInit, OnChanges, DoCheck {\r\n  public picker: DaterangepickerComponent;\r\n  private _onChange = Function.prototype;\r\n  private _onTouched = Function.prototype;\r\n  private _validatorChange = Function.prototype;\r\n  private _value: any;\r\n  private localeDiffer: KeyValueDiffer<string, any>;\r\n  \r\n  @Input()\r\n  showApplyOnlyForCustom: Boolean = false;\r\n  @Input()\r\n  minDate: _moment.Moment\r\n  @Input()\r\n  maxDate: _moment.Moment\r\n  @Input()\r\n  autoApply: boolean;\r\n  @Input()\r\n  alwaysShowCalendars: boolean;\r\n  @Input()\r\n  showCustomRangeLabel: boolean;\r\n  @Input()\r\n  linkedCalendars: boolean;\r\n  @Input()\r\n  singleDatePicker: boolean;\r\n  @Input()\r\n  showWeekNumbers: boolean;\r\n  @Input()\r\n  showISOWeekNumbers: boolean;\r\n  @Input()\r\n  showDropdowns: boolean;\r\n  @Input()\r\n  isInvalidDate: Function;\r\n  @Input()\r\n  isCustomDate: Function;\r\n  @Input()\r\n  showClearButton: boolean;\r\n  @Input()\r\n  ranges: any;\r\n  @Input()\r\n  opens: string;\r\n  @Input()\r\n  drops: string;\r\n  firstMonthDayClass: string;\r\n  @Input()\r\n  lastMonthDayClass: string;\r\n  @Input()\r\n  emptyWeekRowClass: string;\r\n  @Input()\r\n  firstDayOfNextMonthClass: string;\r\n  @Input()\r\n  lastDayOfPreviousMonthClass: string;\r\n  @Input()\r\n  keepCalendarOpeningWithRange: boolean;\r\n  @Input()\r\n  showRangeLabelOnInput: boolean;\r\n  @Input()\r\n  material: boolean = false;\r\n  @Input()\r\n  showCancel: boolean = false;\r\n  _locale: any = {};\r\n  @Input() set locale(value) {\r\n    if (value !== null) {\r\n      this._locale = value;\r\n    }\r\n  }\r\n  get locale(): any {\r\n    return this._locale;\r\n  }\r\n  @Input()\r\n  private _endKey: string = 'endDate';\r\n  private _startKey: string = 'startDate';\r\n  @Input() set startKey(value) {\r\n    if (value !== null) {\r\n      this._startKey = value;\r\n    } else {\r\n      this._startKey = 'startDate';\r\n    }\r\n  };\r\n  @Input() set endKey(value) {\r\n    if (value !== null) {\r\n      this._endKey = value;\r\n    } else {\r\n      this._endKey = 'endDate';\r\n    }\r\n  };\r\n  notForChangesProperty: Array<string> = [\r\n    'locale',\r\n    'endKey',\r\n    'startKey'\r\n  ];\r\n\r\n  get value() {\r\n    return this._value || null;\r\n  }\r\n  set value(val) {\r\n    this._value = val;\r\n    this._onChange(val);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  @Output('change') onChange: EventEmitter<Object> = new EventEmitter();\r\n  @Output('rangeClicked') rangeClicked: EventEmitter<Object> = new EventEmitter();\r\n  @Output('datesUpdated') datesUpdated: EventEmitter<Object> = new EventEmitter();\r\n\r\n  constructor(\r\n    public viewContainerRef: ViewContainerRef,\r\n    public _changeDetectorRef: ChangeDetectorRef,\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _el: ElementRef,\r\n    private _renderer: Renderer2,\r\n    private differs: KeyValueDiffers\r\n  ) {\r\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(DaterangepickerComponent);\r\n    viewContainerRef.clear();\r\n    const componentRef = viewContainerRef.createComponent(componentFactory);\r\n    this.picker = (<DaterangepickerComponent>componentRef.instance);\r\n    this.picker.inline = false; // set inline to false for all directive usage\r\n  }\r\n  ngOnInit() {\r\n    this.picker.rangeClicked.asObservable().subscribe((range: any) => {\r\n      this.rangeClicked.emit(range);\r\n    });\r\n    this.picker.datesUpdated.asObservable().subscribe((range: any) => {\r\n      this.datesUpdated.emit(range);\r\n    });\r\n    this.picker.choosedDate.asObservable().subscribe((change: any) => {\r\n      if (change) {\r\n        const value = {};\r\n        value[this._startKey] = change.startDate;\r\n        value[this._endKey] = change.endDate;\r\n        this.value = value;\r\n        this.onChange.emit(value);\r\n        if(typeof change.chosenLabel === 'string') {\r\n          this._el.nativeElement.value = change.chosenLabel;\r\n        }\r\n      }\r\n    });\r\n    this.picker.firstMonthDayClass = this.firstMonthDayClass;\r\n    this.picker.lastMonthDayClass = this.lastMonthDayClass;\r\n    this.picker.emptyWeekRowClass = this.emptyWeekRowClass;\r\n    this.picker.firstDayOfNextMonthClass = this.firstDayOfNextMonthClass;\r\n    this.picker.lastDayOfPreviousMonthClass = this.lastDayOfPreviousMonthClass;\r\n    this.localeDiffer = this.differs.find(this.locale).create();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void  {\r\n    for (let change in changes) {\r\n      if (changes.hasOwnProperty(change)) {\r\n        if (this.notForChangesProperty.indexOf(change) === -1) {\r\n          this.picker[change] = changes[change].currentValue;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this.localeDiffer) {\r\n      const changes = this.localeDiffer.diff(this.locale);\r\n      if (changes) {\r\n        this.picker.updateLocale(this.locale);\r\n      }\r\n    }\r\n  }\r\n\r\n  onBlur() {\r\n    this._onTouched();\r\n  }\r\n\r\n  open(event?: any) {\r\n    this.picker.show(event);\r\n    this.setPosition();\r\n  }\r\n\r\n  hide(e?) {\r\n    this.picker.hide(e);\r\n  }\r\n  toggle(e?) {\r\n    if (this.picker.isShown) {\r\n      this.hide(e);\r\n    } else {\r\n      this.open(e);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.picker.clear();\r\n  }\r\n\r\n  writeValue(value) {\r\n    this.value = value;\r\n    this.setValue(value);\r\n  }\r\n  registerOnChange(fn) {\r\n    this._onChange = fn;\r\n  }\r\n  registerOnTouched(fn) {\r\n    this._onTouched = fn;\r\n  }\r\n  private setValue(val: any) {\r\n    if (val) {\r\n      if (val[this._startKey]) {\r\n        this.picker.setStartDate(val[this._startKey])\r\n      }\r\n      if (val[this._endKey]) {\r\n        this.picker.setEndDate(val[this._endKey])\r\n      }\r\n      this.picker.calculateChosenLabel();\r\n      if (this.picker.chosenLabel) {\r\n        this._el.nativeElement.value = this.picker.chosenLabel;\r\n      }\r\n    } else {\r\n      //\r\n    }\r\n  }\r\n    /**\r\n     * Set position of the calendar\r\n     */\r\n    setPosition() {\r\n      let style;\r\n      let containerTop;\r\n      const container = this.picker.pickerContainer.nativeElement;\r\n      const element = this._el.nativeElement;\r\n      if (this.drops && this.drops == 'up') {\r\n        containerTop = (element.offsetTop - container.clientHeight) + 'px';\r\n      } else {\r\n        containerTop = 'auto';\r\n      }\r\n      if (this.opens == 'left') {\r\n        style = {\r\n            top: containerTop,\r\n            left: (element.offsetLeft - container.clientWidth + element.clientWidth) + 'px',\r\n            right: 'auto'\r\n        };\r\n      } else if (this.opens == 'center') {\r\n          style = {\r\n            top: containerTop,\r\n            left: (element.offsetLeft  +  element.clientWidth / 2\r\n                    - container.clientWidth / 2) + 'px',\r\n            right: 'auto'\r\n          };\r\n      } else {\r\n          style = {\r\n            top: containerTop,\r\n            left: element.offsetLeft  + 'px',\r\n            right: 'auto'\r\n          }\r\n      }\r\n      if (style) {\r\n        this._renderer.setStyle(container, 'top', style.top);\r\n        this._renderer.setStyle(container, 'left', style.left);\r\n        this._renderer.setStyle(container, 'right', style.right);\r\n      }\r\n\r\n  }\r\n  /**\r\n   * For click outside of the calendar's container\r\n   * @param event event object\r\n   * @param targetElement target element object\r\n   */\r\n  @HostListener('document:click', ['$event', '$event.target'])\r\n  outsideClick(event, targetElement: HTMLElement): void {\r\n      if (!targetElement) {\r\n        return;\r\n      }\r\n      if (targetElement.classList.contains('ngx-daterangepicker-action')) {\r\n        return;\r\n      }\r\n      const clickedInside = this._el.nativeElement.contains(targetElement);\r\n      if (!clickedInside) {\r\n         this.hide()\r\n      }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatButtonModule, MatIconModule} from '@angular/material';\r\nimport { DaterangepickerComponent } from './daterangepicker.component';\r\nimport { DaterangepickerDirective } from './daterangepicker.directive';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DaterangepickerComponent,\r\n    DaterangepickerDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  exports: [\r\n    DaterangepickerComponent,\r\n    DaterangepickerDirective\r\n  ],\r\n  entryComponents: [\r\n    DaterangepickerComponent\r\n  ]\r\n})\r\nexport class NgxDaterangepickerMd { }\r\n"]}